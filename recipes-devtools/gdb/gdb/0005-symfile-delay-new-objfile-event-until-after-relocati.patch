From 7eb025fb2daa48a3295ce66fab10fd31df31b4eb Mon Sep 17 00:00:00 2001
From: Jeffrey Mahoney <jeffm@suse.com>
Date: Sat, 13 Apr 2019 23:11:16 -0400
Subject: [PATCH 05/24] symfile: delay new objfile event until after relocation

Acked-by: Jeff Mahoney <jeffm@suse.com>
---
 gdb/symfile-add-flags.h | 4 ++++
 gdb/symfile.c           | 6 +++++-
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/gdb/symfile-add-flags.h b/gdb/symfile-add-flags.h
index 740357bc125..40d6234d145 100644
--- a/gdb/symfile-add-flags.h
+++ b/gdb/symfile-add-flags.h
@@ -44,6 +44,10 @@ enum symfile_add_flag : unsigned
 
     /* The new objfile should be marked OBJF_NOT_FILENAME.  */
     SYMFILE_NOT_FILENAME = 1 << 5,
+
+    /* Do not execute the new objfile callback event in
+       symbol_file_add_with_addrs.  */
+    SYMFILE_NO_EVENT = 1 << 6,
  };
 
 DEF_ENUM_FLAGS_TYPE (enum symfile_add_flag, symfile_add_flags);
diff --git a/gdb/symfile.c b/gdb/symfile.c
index a2d9980e3c9..7d8d84abf80 100644
--- a/gdb/symfile.c
+++ b/gdb/symfile.c
@@ -1154,7 +1154,8 @@ symbol_file_add_with_addrs (bfd *abfd, const char *name,
 
   finish_new_objfile (objfile, add_flags);
 
-  gdb::observers::new_objfile.notify (objfile);
+  if (!(add_flags & SYMFILE_NO_EVENT))
+    gdb::observers::new_objfile.notify (objfile);
 
   bfd_cache_close_all ();
   return (objfile);
@@ -2292,6 +2293,7 @@ add_symbol_file_command (const char *args, int from_tty)
 
 	  offset = parse_and_eval_address (arg);
 	  seen_offset = true;
+	  add_flags |= SYMFILE_NO_EVENT;
 	}
       else if (strcmp (arg, "--") == 0)
 	stop_processing_options = true;
@@ -2364,6 +2366,8 @@ add_symbol_file_command (const char *args, int from_tty)
     set_objfile_default_section_offset (objf, section_addrs, offset);
 
   add_target_sections_of_objfile (objf);
+  if (seen_offset)
+    gdb::observers::new_objfile.notify (objf);
 
   /* Getting new symbols may change our opinion about what is
      frameless.  */
-- 
2.26.2

